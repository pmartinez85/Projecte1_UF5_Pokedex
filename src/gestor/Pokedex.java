package gestor;

import entitats.Pokemon;
import entitats.Moviment;
import java.awt.Color;
import java.awt.event.WindowEvent;
import java.beans.Introspector;
import java.beans.PropertyDescriptor;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Pedro Martínez Segura
 */
public class Pokedex extends javax.swing.JFrame {

    /**
     * Creates new form 
     * 
     */
    public Pokedex() {
        initComponents();
        try {
            carregaFitxer();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error durant la càrrega", JOptionPane.ERROR_MESSAGE);
        } finally {
            setPrincipi();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        PokemonCRUDButton = new javax.swing.JButton();
        ListButton = new javax.swing.JButton();
        MovimentCRUDButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        MovimentPanel = new javax.swing.JPanel();
        panelCreaAtac = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nomAtacTextField = new javax.swing.JTextField();
        tipusAtacTextField = new javax.swing.JTextField();
        poderTextField = new javax.swing.JTextField();
        creaAtacButton = new javax.swing.JButton();
        llistaPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TaulaLlista = new javax.swing.JTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        PokemonPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nomTextField = new javax.swing.JTextField();
        pesTextField = new javax.swing.JTextField();
        entrenadorTextField = new javax.swing.JTextField();
        creaPokemonButton = new javax.swing.JButton();
        tipusComboBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        AtacsPkmTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        borraPkmButton = new javax.swing.JButton();
        modifPkmButton = new javax.swing.JButton();
        cancelPkmButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pokemonsTable = new javax.swing.JTable();
        JelouPanel = new javax.swing.JPanel();
        jLabelFraseInici = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(19, 11, 96));
        jPanel1.setMaximumSize(new java.awt.Dimension(3200, 3276));

        jPanel2.setBackground(new java.awt.Color(2, 11, 90));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Accions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(254, 254, 254))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PokemonCRUDButton.setText("CRUD Pokemons");
        PokemonCRUDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PokemonCRUDButtonActionPerformed(evt);
            }
        });
        jPanel2.add(PokemonCRUDButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 160, 40));

        ListButton.setText("Llistar Pokemons");
        ListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListButtonActionPerformed(evt);
            }
        });
        jPanel2.add(ListButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 160, 40));

        MovimentCRUDButton.setText("CRUD Moviments");
        MovimentCRUDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovimentCRUDButtonActionPerformed(evt);
            }
        });
        jPanel2.add(MovimentCRUDButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 160, -1));

        ExitButton.setText("Sortir");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        jPanel2.add(ExitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 120, -1));

        jPanel3.setBackground(new java.awt.Color(132, 234, 1));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        jPanel3.setMaximumSize(new java.awt.Dimension(2147, 2147));
        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 1000));
        jPanel3.setLayout(new java.awt.CardLayout());

        MovimentPanel.setBackground(new java.awt.Color(27, 30, 112));
        MovimentPanel.setMaximumSize(new java.awt.Dimension(500, 500));
        MovimentPanel.setPreferredSize(new java.awt.Dimension(400, 400));

        panelCreaAtac.setBackground(new java.awt.Color(41, 42, 143));
        panelCreaAtac.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Crear Atacs", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nom :");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tipus :");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Poder");

        nomAtacTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomAtacTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nomAtacTextFieldFocusLost(evt);
            }
        });

        tipusAtacTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tipusAtacTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tipusAtacTextFieldFocusLost(evt);
            }
        });

        poderTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                poderTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                poderTextFieldFocusLost(evt);
            }
        });

        creaAtacButton.setText("Crear");
        creaAtacButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaAtacButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCreaAtacLayout = new javax.swing.GroupLayout(panelCreaAtac);
        panelCreaAtac.setLayout(panelCreaAtacLayout);
        panelCreaAtacLayout.setHorizontalGroup(
            panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCreaAtacLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(creaAtacButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelCreaAtacLayout.createSequentialGroup()
                        .addGroup(panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6))
                            .addComponent(jLabel8))
                        .addGap(21, 21, 21)
                        .addGroup(panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomAtacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipusAtacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        panelCreaAtacLayout.setVerticalGroup(
            panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCreaAtacLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nomAtacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(tipusAtacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCreaAtacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(poderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(creaAtacButton)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MovimentPanelLayout = new javax.swing.GroupLayout(MovimentPanel);
        MovimentPanel.setLayout(MovimentPanelLayout);
        MovimentPanelLayout.setHorizontalGroup(
            MovimentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MovimentPanelLayout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(panelCreaAtac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(492, Short.MAX_VALUE))
        );
        MovimentPanelLayout.setVerticalGroup(
            MovimentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MovimentPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(panelCreaAtac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(322, Short.MAX_VALUE))
        );

        jPanel3.add(MovimentPanel, "card5");

        llistaPanel.setBackground(new java.awt.Color(236, 241, 34));
        llistaPanel.setBorder(new javax.swing.border.MatteBorder(null));
        llistaPanel.setMaximumSize(new java.awt.Dimension(600, 600));
        llistaPanel.setPreferredSize(new java.awt.Dimension(450, 450));

        TaulaLlista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(TaulaLlista);

        javax.swing.GroupLayout llistaPanelLayout = new javax.swing.GroupLayout(llistaPanel);
        llistaPanel.setLayout(llistaPanelLayout);
        llistaPanelLayout.setHorizontalGroup(
            llistaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(llistaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(llistaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(llistaPanelLayout.createSequentialGroup()
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, llistaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(751, 751, 751))
        );
        llistaPanelLayout.setVerticalGroup(
            llistaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(llistaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(644, 644, 644)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(810, 810, 810)
                .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(llistaPanel, "");

        PokemonPanel.setBackground(new java.awt.Color(75, 8, 116));
        PokemonPanel.setMaximumSize(new java.awt.Dimension(3276, 3276));
        PokemonPanel.setName(""); // NOI18N
        PokemonPanel.setPreferredSize(new java.awt.Dimension(100, 200));

        jPanel4.setBackground(new java.awt.Color(95, 2, 118));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CRUD", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(251, 237, 237));

        jLabel1.setForeground(new java.awt.Color(249, 235, 235));
        jLabel1.setText("Nom :");

        jLabel2.setForeground(new java.awt.Color(249, 239, 239));
        jLabel2.setText("Tipus :");

        jLabel3.setForeground(new java.awt.Color(248, 241, 241));
        jLabel3.setText("Pes :");

        jLabel4.setForeground(new java.awt.Color(250, 243, 243));
        jLabel4.setText("Entrenador");

        nomTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nomTextFieldFocusLost(evt);
            }
        });

        pesTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pesTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pesTextFieldFocusLost(evt);
            }
        });

        entrenadorTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                entrenadorTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                entrenadorTextFieldFocusLost(evt);
            }
        });

        creaPokemonButton.setText("Done");
        creaPokemonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaPokemonButtonActionPerformed(evt);
            }
        });

        AtacsPkmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(AtacsPkmTable);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Moviments:");

        borraPkmButton.setText("Clear");
        borraPkmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borraPkmButtonActionPerformed(evt);
            }
        });

        modifPkmButton.setText("Modify");
        modifPkmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifPkmButtonActionPerformed(evt);
            }
        });

        cancelPkmButton.setText("Cancel");
        cancelPkmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPkmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(creaPokemonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(borraPkmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(modifPkmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(cancelPkmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(67, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(entrenadorTextField))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nomTextField)
                                    .addComponent(pesTextField)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(tipusComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(nomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(pesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(tipusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(entrenadorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifPkmButton)
                    .addComponent(cancelPkmButton)
                    .addComponent(borraPkmButton)
                    .addComponent(creaPokemonButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(94, 1, 114));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Llista", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white)); // NOI18N

        pokemonsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pokemonsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pokemonsTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(pokemonsTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 727, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        javax.swing.GroupLayout PokemonPanelLayout = new javax.swing.GroupLayout(PokemonPanel);
        PokemonPanel.setLayout(PokemonPanelLayout);
        PokemonPanelLayout.setHorizontalGroup(
            PokemonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PokemonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PokemonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(338, Short.MAX_VALUE))
        );
        PokemonPanelLayout.setVerticalGroup(
            PokemonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PokemonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jPanel3.add(PokemonPanel, "card2");

        JelouPanel.setBackground(new java.awt.Color(82, 8, 104));
        JelouPanel.setMaximumSize(new java.awt.Dimension(1000, 1000));
        JelouPanel.setPreferredSize(new java.awt.Dimension(400, 400));

        jLabelFraseInici.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        jLabelFraseInici.setForeground(new java.awt.Color(247, 245, 245));
        jLabelFraseInici.setText("Gestor de Pokemons i Moviments");
        jLabelFraseInici.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout JelouPanelLayout = new javax.swing.GroupLayout(JelouPanel);
        JelouPanel.setLayout(JelouPanelLayout);
        JelouPanelLayout.setHorizontalGroup(
            JelouPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JelouPanelLayout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(jLabelFraseInici, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(455, Short.MAX_VALUE))
        );
        JelouPanelLayout.setVerticalGroup(
            JelouPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JelouPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabelFraseInici, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(347, Short.MAX_VALUE))
        );

        jPanel3.add(JelouPanel, "card3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1466, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(680, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListButtonActionPerformed
        ModelTaula<Pokemon> mt = new ModelTaula(new String[]{"Nom", "Pes", "Tipus", "Mail_Entrenador", "Moviments"}, Pokedex.pokemons, Pokemon.class);

        TaulaLlista.setModel(mt);

        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(llistaPanel);
        jPanel3.revalidate();
        jPanel3.repaint();
    }//GEN-LAST:event_ListButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        guardaFitxer();
    }//GEN-LAST:event_formWindowClosing

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void MovimentCRUDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovimentCRUDButtonActionPerformed
        nomAtacTextField.setText("");
        tipusAtacTextField.setText("");
        poderTextField.setText("");
        creaAtacButton.setEnabled(false);

        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(MovimentPanel);
        jPanel3.revalidate();
        jPanel3.repaint();
    }//GEN-LAST:event_MovimentCRUDButtonActionPerformed

    private void PokemonCRUDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PokemonCRUDButtonActionPerformed
        nomTextField.setText("");
        tipusComboBox.setEditable(true);
        tipusComboBox.setSelectedIndex(0);
        pesTextField.setText("");
        entrenadorTextField.setText("");

        ModelTaula<Moviment> mt = new ModelTaula(new String[]{"Nom", "Tipus", "Poder"}, new ArrayList(Pokedex.moviments), Moviment.class);

        AtacsPkmTable.setModel(mt);

        ModelTaula<Pokemon> m = new ModelTaula(new String[]{"Nom", "Pes", "Tipus", "Mail_Entrenador", "Moviments"}, Pokedex.pokemons, Pokemon.class);

        pokemonsTable.setModel(m);

        borraPkmButton.setEnabled(false);
        modifPkmButton.setEnabled(false);
        creaPokemonButton.setEnabled(false);

        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(PokemonPanel);
        jPanel3.revalidate();
        jPanel3.repaint();
    }//GEN-LAST:event_PokemonCRUDButtonActionPerformed

    private void pokemonsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pokemonsTableMouseClicked
        int i = pokemonsTable.getSelectedRow();

        if (i != -1) {
            borraPkmButton.setEnabled(true);
            modifPkmButton.setEnabled(true);

            ModelTaula<Pokemon> mt = (ModelTaula<Pokemon>) pokemonsTable.getModel();
            nomTextField.setText((String) mt.getValueAt(i, 0));
            tipusComboBox.setSelectedItem((String) mt.getValueAt(i, 1));
            pesTextField.setText(mt.getValueAt(i, 2).toString());
            entrenadorTextField.setText(mt.getValueAt(i, 3).toString());

            ArrayList<Moviment> mv = (ArrayList<Moviment>) mt.getValueAt(i, 4);
            AtacsPkmTable.getSelectionModel().clearSelection();
            if (!mv.isEmpty()) {
                ModelTaula<Moviment> mt2 = (ModelTaula<Moviment>) AtacsPkmTable.getModel();
                for (int j = 0; j < mt2.getRowCount(); j++) {
                    if (mv.contains((Moviment) mt2.getValueAt(j, -1))) {
                        AtacsPkmTable.getSelectionModel().addSelectionInterval(j, j);
                    }

                }
            }
        } else {
            nomTextField.setText("");
            tipusComboBox.setSelectedIndex(0);
            pesTextField.setText("");
            entrenadorTextField.setText("");
            AtacsPkmTable.getSelectionModel().clearSelection();
            borraPkmButton.setEnabled(false);
            modifPkmButton.setEnabled(false);

        }
    }//GEN-LAST:event_pokemonsTableMouseClicked

    private void creaAtacButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaAtacButtonActionPerformed
       Moviment a = new Moviment(
                nomAtacTextField.getText(),
                tipusAtacTextField.getText(),
                Integer.valueOf(poderTextField.getText()));
        moviments.add(a);

        JOptionPane.showMessageDialog(this, "Moviment creat");
    }//GEN-LAST:event_creaAtacButtonActionPerformed

    private void cancelPkmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPkmButtonActionPerformed
         neteja();
    }//GEN-LAST:event_cancelPkmButtonActionPerformed

    private void modifPkmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifPkmButtonActionPerformed
        
        Pokemon a = (Pokemon) pokemonsTable.getModel().getValueAt(pokemonsTable.getSelectedRow(), -1);

        a.set1nom(nomTextField.getText());
        a.set2pes(Integer.valueOf(pesTextField.getText()));
        a.set3tipus((String) tipusComboBox.getSelectedItem());
        a.set4mailEntre(entrenadorTextField.getText());
        
        int[] selecs = AtacsPkmTable.getSelectedRows();
        
        ArrayList<Moviment> atac = new ArrayList<>();
        
        
        for (int i = 0; i < selecs.length; i++) {
            atac.add((Moviment) AtacsPkmTable.getModel().getValueAt(selecs[i], -1));
        }
        a.set5atacs(atac);

        ModelTaula<Pokemon> m = new ModelTaula(new String[]{"Nom", "Pes", "Tipus", "Mail_Entrenador", "Moviments"}, Pokedex.pokemons, Pokemon.class);

        pokemonsTable.setModel(m);

        neteja();

    }//GEN-LAST:event_modifPkmButtonActionPerformed

    private void borraPkmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borraPkmButtonActionPerformed
        // TODO add your handling code here:
        Pokemon a = (Pokemon) pokemonsTable.getModel().getValueAt(pokemonsTable.getSelectedRow(), -1);
        pokemons.remove(a);

        ModelTaula<Pokemon> m = new ModelTaula(new String[]{"Nom", "Pes", "Tipus", "Mail_Entrenador", "Moviments"}, Pokedex.pokemons, Pokemon.class);

        pokemonsTable.setModel(m);

        neteja();

    }//GEN-LAST:event_borraPkmButtonActionPerformed

    private void creaPokemonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaPokemonButtonActionPerformed
        // TODO add your handling code here:
        Pokemon a = new Pokemon(nomTextField.getText(),
                Integer.valueOf(pesTextField.getText()),
                (String) tipusComboBox.getSelectedItem(),
                entrenadorTextField.getText());
        
        int[] selecs = AtacsPkmTable.getSelectedRows();
        
        ArrayList<Moviment> atac = new ArrayList<>();
        
        for (int i = 0; i < selecs.length; i++) {
            atac.add((Moviment) AtacsPkmTable.getModel().getValueAt(selecs[i], -1));
        }
        a.set5atacs(atac);
        pokemons.add(a);

        if (tipus.add((String) tipusComboBox.getSelectedItem())) {
            tipusComboBox.addItem((String) tipusComboBox.getSelectedItem());
            tipus.add((String) tipusComboBox.getSelectedItem());
        }

        ModelTaula<Pokemon> m = new ModelTaula(new String[]{"Nom", "Pes", "Tipus", "Mail_Entrenador", "Moviments"}, Pokedex.pokemons, Pokemon.class);

        pokemonsTable.setModel(m);
    }//GEN-LAST:event_creaPokemonButtonActionPerformed

    private void nomTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomTextFieldFocusLost
        // TODO add your handling code here:
        if (nomTextField.getText().equals("")) {
            nomTextField.setForeground(Color.red);
            nomTextField.setText("Camp buit");
        }
        acceptaONo();
    }//GEN-LAST:event_nomTextFieldFocusLost

    private void nomTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomTextFieldFocusGained
        // TODO add your handling code here:
        nomTextField.setForeground(Color.black);
    }//GEN-LAST:event_nomTextFieldFocusGained

    private void pesTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pesTextFieldFocusLost
        // TODO add your handling code here:
        if (!pesTextField.getText().matches("\\d+\\.?\\d*")) {
            pesTextField.setForeground(Color.blue);
            pesTextField.setText("Format erroni!");
        }
        acceptaONo();
    }//GEN-LAST:event_pesTextFieldFocusLost

    private void pesTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pesTextFieldFocusGained
        // TODO add your handling code here:
        pesTextField.setForeground(Color.black);
    }//GEN-LAST:event_pesTextFieldFocusGained

    private void entrenadorTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrenadorTextFieldFocusGained
        // TODO add your handling code here:
        entrenadorTextField.setForeground(Color.black);
    }//GEN-LAST:event_entrenadorTextFieldFocusGained

    private void entrenadorTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrenadorTextFieldFocusLost
        // TODO add your handling code here:
        if (!entrenadorTextField.getText().matches("\\w+\\.?\\w+@\\w+\\.\\w+")) {
            entrenadorTextField.setForeground(Color.blue);
            entrenadorTextField.setText("Format incorrecte!");
        }
        acceptaONo();
    }//GEN-LAST:event_entrenadorTextFieldFocusLost

    private void nomAtacTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomAtacTextFieldFocusLost
        // TODO add your handling code here:
        if (nomAtacTextField.getText().equals("")) {
            nomAtacTextField.setForeground(Color.blue);
            nomAtacTextField.setText("Està buit.");
        }
        acceptaAl();
    }//GEN-LAST:event_nomAtacTextFieldFocusLost

    private void nomAtacTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomAtacTextFieldFocusGained
        // TODO add your handling code here:
        nomAtacTextField.setForeground(Color.black);
    }//GEN-LAST:event_nomAtacTextFieldFocusGained

    private void tipusAtacTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tipusAtacTextFieldFocusGained
        // TODO add your handling code here:
        tipusAtacTextField.setForeground(Color.black);
    }//GEN-LAST:event_tipusAtacTextFieldFocusGained

    private void tipusAtacTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tipusAtacTextFieldFocusLost
        // TODO add your handling code here:
        if (tipusAtacTextField.getText().equals("")) {
            tipusAtacTextField.setForeground(Color.blue);
            tipusAtacTextField.setText("Esta buit.");
        }
        acceptaAl();
    }//GEN-LAST:event_tipusAtacTextFieldFocusLost

    private void poderTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_poderTextFieldFocusGained
        // TODO add your handling code here:
        poderTextField.setForeground(Color.black);
    }//GEN-LAST:event_poderTextFieldFocusGained

    private void poderTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_poderTextFieldFocusLost
        // TODO add your handling code here:
        if (!poderTextField.getText().matches("\\d+")){
            poderTextField.setForeground(Color.blue);
            poderTextField.setText("Format erroni!");
        }
        acceptaAl();
    }//GEN-LAST:event_poderTextFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        java.awt.EventQueue.invokeLater(() -> {
//            new Pokedex().setVisible(true);
//        });
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pokedex().setVisible(true);
            }
        });
 
    }

    public static ArrayList<Pokemon> pokemons;
    public static TreeSet<Moviment> moviments;
    public static TreeSet<String> tipus;
    public static File f = new File("pokemons.dat");

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AtacsPkmTable;
    private javax.swing.JButton ExitButton;
    private javax.swing.JPanel JelouPanel;
    private javax.swing.JButton ListButton;
    private javax.swing.JButton MovimentCRUDButton;
    private javax.swing.JPanel MovimentPanel;
    private javax.swing.JButton PokemonCRUDButton;
    private javax.swing.JPanel PokemonPanel;
    private javax.swing.JTable TaulaLlista;
    private javax.swing.JButton borraPkmButton;
    private javax.swing.JButton cancelPkmButton;
    private javax.swing.JButton creaAtacButton;
    private javax.swing.JButton creaPokemonButton;
    private javax.swing.JTextField entrenadorTextField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelFraseInici;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel llistaPanel;
    private javax.swing.JButton modifPkmButton;
    private javax.swing.JTextField nomAtacTextField;
    private javax.swing.JTextField nomTextField;
    private javax.swing.JPanel panelCreaAtac;
    private javax.swing.JTextField pesTextField;
    private javax.swing.JTextField poderTextField;
    private javax.swing.JTable pokemonsTable;
    private javax.swing.JTextField tipusAtacTextField;
    private javax.swing.JComboBox tipusComboBox;
    // End of variables declaration//GEN-END:variables

    private void guardaFitxer() {
        try (
                ObjectOutputStream out = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(f)));) {

            for (int i = 0; i < pokemons.size(); i++) {
                try {
                    Pokemon a = (Pokemon) pokemons.get(i);
                    out.writeObject(a);
                } catch (Exception ex) {
                    break;
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error en la escriptura", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregaFitxer() throws IOException {
        pokemons = new ArrayList<>();
        moviments = new TreeSet<>();
        tipus = new TreeSet<>();
                              
        if (f.exists()) {
            try (
                    ObjectInputStream entrada = new ObjectInputStream(new BufferedInputStream(new FileInputStream(f)));) {
                while (true) {
                    try {
                        Pokemon a = (Pokemon) entrada.readObject();
                        pokemons.add(a);
                        ArrayList<Moviment> mv = a.get5atacs();
                        moviments.addAll(mv);
                        tipus.add(a.get3tipus());
                    } catch (IOException | ClassNotFoundException ex) {
                        break;
                    }
                }

            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "No s'ha carregat correctament. El fitxer no existeix.", "Error en la càrrega", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void setPrincipi() {
        ModelTaula<Pokemon> mt = new ModelTaula(new String[]{"Nom", "Pes", "Tipus", "Mail_Entrenador", "Moviments"}, Pokedex.pokemons, Pokemon.class);

        TaulaLlista.setModel(mt);
        TaulaLlista.setRowSelectionAllowed(false);

        Iterator<String> it = tipus.iterator();
        while (it.hasNext()) {
            tipusComboBox.addItem(it.next());
        }

        pokemonsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        nomTextField.setToolTipText("Fica algun nom!");
        pesTextField.setToolTipText("Has de ficar un nombre!");
        entrenadorTextField.setToolTipText("Introdueix un mail!");
        poderTextField.setToolTipText("Ha de ser un nombre enter!!");

        jPanel3.removeAll();
        jPanel3.revalidate();
        jPanel3.add(JelouPanel);
        jPanel3.revalidate();
        jPanel3.repaint();

    }

    private void neteja() {
        nomTextField.setText("");
        tipusComboBox.setSelectedIndex(0);
        pesTextField.setText("");
        entrenadorTextField.setText("");
        AtacsPkmTable.getSelectionModel().clearSelection();
        pokemonsTable.getSelectionModel().clearSelection();
        borraPkmButton.setEnabled(false);
        modifPkmButton.setEnabled(false);
        creaPokemonButton.setEnabled(false);
    }

    private void acceptaONo() {
        int i = pokemonsTable.getSelectedRow();

        if (nomTextField.getText().equals("") || nomTextField.getText().equals("No pot estar buit!")
                || !pesTextField.getText().matches("\\d+\\.?\\d*") || pesTextField.getText().equals("Format incorrecte!")
                || !entrenadorTextField.getText().matches("\\w+\\.?\\w+@\\w+\\.\\w+") || entrenadorTextField.getText().equals("Format incorrecte!")) {
            borraPkmButton.setEnabled(false);
            modifPkmButton.setEnabled(false);
            creaPokemonButton.setEnabled(false);
        } else if (i != -1) {
            borraPkmButton.setEnabled(true);
            modifPkmButton.setEnabled(true);
        } else {
            creaPokemonButton.setEnabled(true);
        }
    }

    private void acceptaAl() {
        if(
                nomAtacTextField.getText().equals("") || nomAtacTextField.getText().equals("No pot estar buit!")
                || tipusAtacTextField.getText().equals("") || tipusAtacTextField.getText().equals("No pot estar buit!")
                || !poderTextField.getText().matches("\\d+") || poderTextField.getText().equals("Format incorrecte!")
                ){
            creaAtacButton.setEnabled(false);
        }else{
           creaAtacButton.setEnabled(true); 
        }
    }
}

class ModelTaula<T> extends AbstractTableModel {

    final Class<T> typeParameterClass;

    private String[] columnNames;
    private final List<T> dades;

    public ModelTaula(String[] nomColumnes, ArrayList<T> dades, Class<T> typeParameterClass) {
        this.typeParameterClass = typeParameterClass;
        this.columnNames = nomColumnes;
        this.dades = dades;
    }

    public ModelTaula(ArrayList<T> dades, Class<T> typeParameterClass) {
        this.typeParameterClass = typeParameterClass;
        if (dades != null && !dades.isEmpty()) {

            Class<?> classe = this.typeParameterClass;

            int nombrecamps = classe.getDeclaredFields().length;

            this.columnNames = new String[nombrecamps];

            for (int i = 0; i < nombrecamps; i++) {
                Matcher matcher = Pattern.compile("_\\d+").matcher(classe.getDeclaredFields()[i].getName());
                matcher.find();
                this.columnNames[i] = classe.getDeclaredFields()[i].getName().substring(matcher.group().length()).toUpperCase();
            }
        }
        this.dades = dades;
    }

    //Nom de les columnes al crear l'objecte
    @Override
    public String getColumnName(int column) {
        return columnNames[column];
    }

    //Nombre correcte de files de dades
    @Override
    public int getRowCount() {
        int cont = 0;

        if (dades != null) {
            cont = dades.size();
        }

        return cont;
    }

    //Nombre correcte de columnes 
    @Override
    public int getColumnCount() {

        int cont = 0;

        if (columnNames != null) {
            cont = columnNames.length;
        }

        return cont;
    }

    //Dades passades al crear l'objecte
    @Override
    public Object getValueAt(int rowIndex, int columnIndex) {
        if (columnIndex == -1) {
            return dades.get(rowIndex);
        }
        Class<?> classe = this.typeParameterClass;
        int ncamps = classe.getDeclaredFields().length;

        Method[] methods = new Method[ncamps];
        int i = 0;
        try {
            for (PropertyDescriptor pD : Introspector.getBeanInfo(classe).getPropertyDescriptors()) {
                Method m = pD.getReadMethod();
                if (m != null & !m.getName().equals("getClass")) {
                    methods[i++] = m;
                }
            }
        } catch (java.beans.IntrospectionException ex) {
           //Logger.getLogger(ModelTaula.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            return methods[columnIndex].invoke(dades.get(rowIndex));
        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {
            Logger.getLogger(ModelTaula.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;

    }

}
